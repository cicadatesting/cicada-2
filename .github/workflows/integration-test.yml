name: Integration Test Workflow
on:
  push:
    branches:
      - dev
jobs:
  build-containers:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build and push engine
        uses: docker/build-push-action@v2
        with:
          context: .
          file: dockerfiles/engine.dockerfile
          platforms: linux/amd64,linux/arm64,linux/386
          push: true
          tags: cicadatesting/cicada-2-engine:${{ env.GITHUB_SHA }}
      - name: Build and push rest-runner
        uses: docker/build-push-action@v2
        with:
          context: .
          file: dockerfiles/rest-runner.dockerfile
          platforms: linux/amd64,linux/arm64,linux/386
          push: true
          tags: cicadatesting/cicada-2-rest-runner:${{ env.GITHUB_SHA }}
      - name: Build and push sql-runner
        uses: docker/build-push-action@v2
        with:
          context: .
          file: dockerfiles/sql-runner.dockerfile
          platforms: linux/amd64,linux/arm64,linux/386
          push: true
          tags: cicadatesting/cicada-2-sql-runner:${{ env.GITHUB_SHA }}
      - name: Build and push kafka-runner
        uses: docker/build-push-action@v2
        with:
          context: .
          file: dockerfiles/kafka-runner.dockerfile
          platforms: linux/amd64,linux/arm64,linux/386
          push: true
          tags: cicadatesting/cicada-2-kafka-runner:${{ env.GITHUB_SHA }}
      - name: Build and push s3-runner
        uses: docker/build-push-action@v2
        with:
          context: .
          file: dockerfiles/s3-runner.dockerfile
          platforms: linux/amd64,linux/arm64,linux/386
          push: true
          tags: cicadatesting/cicada-2-s3-runner:${{ env.GITHUB_SHA }}
      - name: Build and push grpc-runner
        uses: docker/build-push-action@v2
        with:
          context: .
          file: dockerfiles/grpc-runner.dockerfile
          platforms: linux/amd64,linux/arm64,linux/386
          push: true
          tags: cicadatesting/cicada-2-grpc-runner:${{ env.GITHUB_SHA }}
  test-rest-api:
    runs-on: ubuntu-latest
    needs: build-containers
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Start services
        run: |
          cd example_services/rest_api
          make services
      - name: Run tests
        run: |
          cd example_services/rest_api
          make run
      - name: Stop and clean
        run: |
          cd example_services/rest_api
          make clean
  test-file-transform-service:
    runs-on: ubuntu-latest
    needs: build-containers
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Start services
        run: |
          cd example_services/file_transform_service
          make services
      - name: Run tests
        run: |
          cd example_services/file_transform_service
          make run
      - name: Stop and clean
        run: |
          cd example_services/file_transform_service
          make clean
  test-grpc-runner:
    runs-on: ubuntu-latest
    needs: build-containers
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Start services
        run: |
          cd example_services/grpc_server
          make services
      - name: Run tests
        run: |
          cd example_services/grpc_server
          make run
      - name: Stop and clean
        run: |
          cd example_services/grpc_server
          make clean
