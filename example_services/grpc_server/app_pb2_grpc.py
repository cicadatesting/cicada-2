# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import app_pb2 as app__pb2


class GreeterStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.SayHello = channel.unary_unary(
                '/app.Greeter/SayHello',
                request_serializer=app__pb2.HelloRequest.SerializeToString,
                response_deserializer=app__pb2.HelloReply.FromString,
                )
        self.SayHelloCS = channel.stream_unary(
                '/app.Greeter/SayHelloCS',
                request_serializer=app__pb2.HelloRequest.SerializeToString,
                response_deserializer=app__pb2.HelloReply.FromString,
                )
        self.SayHelloSS = channel.unary_stream(
                '/app.Greeter/SayHelloSS',
                request_serializer=app__pb2.HelloRequest.SerializeToString,
                response_deserializer=app__pb2.HelloReply.FromString,
                )
        self.SayHelloBI = channel.stream_stream(
                '/app.Greeter/SayHelloBI',
                request_serializer=app__pb2.HelloRequest.SerializeToString,
                response_deserializer=app__pb2.HelloReply.FromString,
                )
        self.SayHelloError = channel.unary_unary(
                '/app.Greeter/SayHelloError',
                request_serializer=app__pb2.HelloRequest.SerializeToString,
                response_deserializer=app__pb2.HelloReply.FromString,
                )
        self.SayHelloBytes = channel.unary_unary(
                '/app.Greeter/SayHelloBytes',
                request_serializer=app__pb2.HelloRequestBytes.SerializeToString,
                response_deserializer=app__pb2.HelloReply.FromString,
                )


class GreeterServicer(object):
    """Missing associated documentation comment in .proto file."""

    def SayHello(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SayHelloCS(self, request_iterator, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SayHelloSS(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SayHelloBI(self, request_iterator, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SayHelloError(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SayHelloBytes(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_GreeterServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'SayHello': grpc.unary_unary_rpc_method_handler(
                    servicer.SayHello,
                    request_deserializer=app__pb2.HelloRequest.FromString,
                    response_serializer=app__pb2.HelloReply.SerializeToString,
            ),
            'SayHelloCS': grpc.stream_unary_rpc_method_handler(
                    servicer.SayHelloCS,
                    request_deserializer=app__pb2.HelloRequest.FromString,
                    response_serializer=app__pb2.HelloReply.SerializeToString,
            ),
            'SayHelloSS': grpc.unary_stream_rpc_method_handler(
                    servicer.SayHelloSS,
                    request_deserializer=app__pb2.HelloRequest.FromString,
                    response_serializer=app__pb2.HelloReply.SerializeToString,
            ),
            'SayHelloBI': grpc.stream_stream_rpc_method_handler(
                    servicer.SayHelloBI,
                    request_deserializer=app__pb2.HelloRequest.FromString,
                    response_serializer=app__pb2.HelloReply.SerializeToString,
            ),
            'SayHelloError': grpc.unary_unary_rpc_method_handler(
                    servicer.SayHelloError,
                    request_deserializer=app__pb2.HelloRequest.FromString,
                    response_serializer=app__pb2.HelloReply.SerializeToString,
            ),
            'SayHelloBytes': grpc.unary_unary_rpc_method_handler(
                    servicer.SayHelloBytes,
                    request_deserializer=app__pb2.HelloRequestBytes.FromString,
                    response_serializer=app__pb2.HelloReply.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'app.Greeter', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Greeter(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def SayHello(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/app.Greeter/SayHello',
            app__pb2.HelloRequest.SerializeToString,
            app__pb2.HelloReply.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SayHelloCS(request_iterator,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.stream_unary(request_iterator, target, '/app.Greeter/SayHelloCS',
            app__pb2.HelloRequest.SerializeToString,
            app__pb2.HelloReply.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SayHelloSS(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/app.Greeter/SayHelloSS',
            app__pb2.HelloRequest.SerializeToString,
            app__pb2.HelloReply.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SayHelloBI(request_iterator,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.stream_stream(request_iterator, target, '/app.Greeter/SayHelloBI',
            app__pb2.HelloRequest.SerializeToString,
            app__pb2.HelloReply.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SayHelloError(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/app.Greeter/SayHelloError',
            app__pb2.HelloRequest.SerializeToString,
            app__pb2.HelloReply.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SayHelloBytes(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/app.Greeter/SayHelloBytes',
            app__pb2.HelloRequestBytes.SerializeToString,
            app__pb2.HelloReply.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)
