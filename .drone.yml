kind: pipeline
type: docker
name: default

steps:
  - name: format
    image: python:3.8
    commands:
      - pip install black
      - black cicada2
    when:
      branch:
        - master
        - dev
      event:
        - push
  - name: lint
    image: python:3.8
    commands:
      - pip install pylint==2.4.4
      - pylint cicada2
    when:
      branch:
        - master
        - dev
      event:
        - push
  - name: test
    image: python:3.8
    commands:
    - pip install -r requirements.txt
    - pip install pytest
    - pytest
    when:
      branch:
        - master
        - dev
      event:
        - push
  - name: build-engine
    image: plugins/docker
    settings:
      dockerfile: dockerfiles/engine.dockerfile
      repo: cicadatesting/cicada-2-engine
      username:
        from_secret: DOCKER_USERNAME
      password:
        from_secret: DOCKER_PASSWORD
      tags:
        - 1.0.0  # NOTE: possibly derive from branch name/pr name or something when doing releases
        - latest
        - ${DRONE_COMMIT_SHA}
    commands: []
    when:
      branch:
        - master
      event:
        - push
  - name: build-rest-runner
    image: plugins/docker
    settings:
      dockerfile: dockerfiles/rest-runner.dockerfile
      repo: cicadatesting/cicada-2-rest-runner
      username:
        from_secret: DOCKER_USERNAME
      password:
        from_secret: DOCKER_PASSWORD
      tags:
        - 1.0.0
        - latest
        - ${DRONE_COMMIT_SHA}
    commands: []
    when:
      branch:
        - master
      event:
        - push
  - name: build-sql-runner
    image: plugins/docker
    settings:
      dockerfile: dockerfiles/sql-runner.dockerfile
      repo: cicadatesting/cicada-2-sql-runner
      username:
        from_secret: DOCKER_USERNAME
      password:
        from_secret: DOCKER_PASSWORD
      tags:
        - 1.0.0
        - latest
        - ${DRONE_COMMIT_SHA}
    commands: []
    when:
      branch:
        - master
      event:
        - push
  - name: build-kafka-runner
    image: plugins/docker
    settings:
      dockerfile: dockerfiles/kafka-runner.dockerfile
      repo: cicadatesting/cicada-2-kafka-runner
      username:
        from_secret: DOCKER_USERNAME
      password:
        from_secret: DOCKER_PASSWORD
      tags:
        - 1.0.0
        - latest
        - ${DRONE_COMMIT_SHA}
    commands: []
    when:
      branch:
        - master
      event:
        - push
  - name: build-s3-runner
    image: plugins/docker
    settings:
      dockerfile: dockerfiles/s3-runner.dockerfile
      repo: cicadatesting/cicada-2-s3-runner
      username:
        from_secret: DOCKER_USERNAME
      password:
        from_secret: DOCKER_PASSWORD
      tags:
        - 1.0.0
        - latest
        - ${DRONE_COMMIT_SHA}
    commands: []
    when:
      branch:
        - master
      event:
        - push
  - name: build-grpc-runner
    image: plugins/docker
    settings:
      dockerfile: dockerfiles/grpc-runner.dockerfile
      repo: cicadatesting/cicada-2-grpc-runner
      username:
        from_secret: DOCKER_USERNAME
      password:
        from_secret: DOCKER_PASSWORD
      tags:
        - 1.0.0
        - latest
        - ${DRONE_COMMIT_SHA}
    commands: []
    when:
      branch:
        - master
      event:
        - push
  - name: build-io-utility
    image: plugins/docker
    settings:
      dockerfile: dockerfiles/operator.io-utility.dockerfile
      repo: cicadatesting/cicada-operator-io-utility
      username:
        from_secret: DOCKER_USERNAME
      password:
        from_secret: DOCKER_PASSWORD
      tags:
        - 1.0.0
        - latest
        - ${DRONE_COMMIT_SHA}
    commands: []
    when:
      branch:
        - master
      event:
        - push
  - name: build-cicada-operator
    image: plugins/docker
    settings:
      dockerfile: dockerfiles/operator.daemon.dockerfile
      repo: cicadatesting/cicada-operator
      username:
        from_secret: DOCKER_USERNAME
      password:
        from_secret: DOCKER_PASSWORD
      tags:
        - 1.0.0
        - latest
        - ${DRONE_COMMIT_SHA}
    commands: []
    when:
      branch:
        - master
      event:
        - push
  - name: publish-docs
    image: node:14
    environment:
      GIT_EMAIL: jeremyaherzog@gmail.com
      GIT_USER: herzo175
      GIT_PASSWORD:
        from_secret: GIT_PASSWORD
    commands:
      - git config --global user.name $GIT_USER
      - git config --global user.email $GIT_EMAIL
      - echo "machine github.com login $GIT_USER password $GIT_PASSWORD" > ~/.netrc
      - cd docsite/website
      - npm install
      - GIT_USER=$GIT_USER CURRENT_BRANCH=master npm run publish-gh-pages
    when:
      branch:
        - master
      event:
        - push
